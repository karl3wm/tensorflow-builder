name: Build Tensorflow with concurrency limit
on:
  workflow_dispatch: # Allows manual triggering from the Actions tab
  schedule: # Example: Run weekly on Sunday at 03:00 UTC
    - cron: '0 3 * * 0'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**' # Only run if workflow files change
jobs:
  version_enumeration:
    runs-on: ubuntu-22.04
    outputs:
      tensorflow: ${{ steps.tensorflow.outputs.versions }}
      python: ${{ steps.python.outputs.versions }}
    steps:
      - name: Install jq
        run: sudo apt-get install jq coreutils findutils git
      - name: Fetch recent TensorFlow tags
        id: tensorflow
        run: |
          LATEST_TENSORFLOW_VERS=2 # don't forget to enable "Free disk space" below if raising this
          mkdir -p tensorflow.git
          cd tensorflow.git
          git init .
          git remote add origin https://github.com/tensorflow/tensorflow
          git fetch --depth=1 --filter=tree:0 origin 'refs/tags/*:refs/tags/*'
          #                list tags in creation order                   | take first n of them and shuffle them  | convert the first 4 into a json array                                         | store the result
          echo "versions=$(git tag --list --sort=-creatordate 'v*.[0-9]' | head -n $LATEST_TENSORFLOW_VERS | shuf | xargs echo -n | jq --raw-input --slurp --compact-output 'split(" ")|.[0:4]')" | tee -a $GITHUB_OUTPUT
      - name: Fetch recent Python versions
        id: python
        run: |
          SKIP_PYTHON_VERS=1
          LATEST_PYTHON_VERS=1
          mkdir -p python.git
          cd python.git
          git init .
          git remote add origin https://github.com/python/cpython
          git fetch --depth=1 --filter=tree:0 origin 'refs/heads/3.*:refs/heads/3.*'
          #                list branches in numeric order                                          | take the first n of them and and shuffle them                         | convert the first 2 into a json array                                         | store the result
          echo "versions=$(git branch | sort --ignore-leading-blanks --numeric --reverse --key 1.3 | tail -n +$((SKIP_PYTHON_VERS+1)) | head -n $LATEST_PYTHON_VERS | shuf | xargs echo -n | jq --raw-input --slurp --compact-output 'split(" ")|.[0:2]')" | tee -a $GITHUB_OUTPUT
  sequential_build:
    uses: ./.github/workflows/build.yml
    needs: version_enumeration
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJSON(needs.version_enumeration.outputs.python) }}
        tensorflow: ${{ fromJSON(needs.version_enumeration.outputs.tensorflow) }}
        acceleration: ['cpu', 'gpu', 'rocm']
    with:
      tensorflow: ${{ matrix.tensorflow }}
      python: ${{ matrix.python }}
      acceleration: ${{ matrix.acceleration }}
      run_id: ${{ github.run_id }}
