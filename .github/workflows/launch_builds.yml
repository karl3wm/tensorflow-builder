name: Launch Builds
on:
  workflow_dispatch: # Allows manual triggering from the Actions tab
  schedule: # Example: Run weekly on Sunday at 03:00 UTC
    - cron: '0 3 * * 0'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**' # Only run if workflow files change
jobs:
  version_enumeration:
    runs-on: ubuntu-latest
    outputs:
      tensorflow: ${{ steps.tensorflow.outputs.versions }}
      python: ${{ steps.python.outputs.versions }}
    steps:
      - name: Install jq
        run: sudo apt-get install jq coreutils findutils git sed
      - name: Fetch recent TensorFlow tags
        id: tensorflow
        run: |
          LATEST_TENSORFLOW_VERS=2
          TOTAL_TENSORFLOW_VERS=16
          mkdir -p tensorflow.git
          cd tensorflow.git
          git init .
          #REPO=https://github.com/tensorflow/tensorflow
          #TAGPAT='v*.[0-9]'
          # ensure tags are found that work with rocm
          REPO=https://github.com/ROCm/tensorflow-upstream
          TAGPAT='v*-rocm-enhanced'
          git fetch --depth=1 --filter=tree:0 "$REPO" 'refs/tags/*:refs/tags/*'
          #                list tags in creation order                  | take first n of them and shuffle them  | extract the version        | convert the first m into a json array                                         | store the result
          echo "versions=$(git tag --list --sort=-creatordate "$TAGPAT" | head -n $LATEST_TENSORFLOW_VERS | shuf | sed 's/v\([.0-9]*\).*/\1/' | xargs echo -n | jq --raw-input --slurp --compact-output 'split(" ")|.[0:'"$TOTAL_TENSORFLOW_VERS"']')" | tee -a $GITHUB_OUTPUT
      - name: Fetch recent Python versions
        id: python
        run: |
          SKIP_PYTHON_VERS=2
          LATEST_PYTHON_VERS=5
          TOTAL_PYTHON_VERS=16
          mkdir -p python.git
          cd python.git
          git init .
          TAGPAT='v*.[0-9]'
          git remote add origin https://github.com/python/cpython
          git fetch --depth=1 --filter=tree:0 origin 'refs/tags/*:refs/tags/*'
          #                list tags                | extract the version                 | sort them numerically and remove duplicates | take the first n of them and and shuffle them                         | convert the first m into a json array                                                              | store the result
          echo "versions=$(git tag --list "$TAGPAT" | sed -ne 's/v\(3\.[0-9]*\)\..*/\1/p' | sort --unique --numeric --reverse --key 1.3 | tail -n +$((SKIP_PYTHON_VERS+1)) | head -n $LATEST_PYTHON_VERS | shuf | xargs echo -n | jq --raw-input --slurp --compact-output 'split(" ")|.[0:'"$TOTAL_PYTHON_VERS"']')" | tee -a $GITHUB_OUTPUT
  build_many:
    needs: version_enumeration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ${{ fromJSON(needs.version_enumeration.outputs.python) }}
        tensorflow: ${{ fromJSON(needs.version_enumeration.outputs.tensorflow) }}
        acceleration: ['cpu'] #, 'gpu', 'rocm']
    steps:
      - name: Dispatch repository events
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: "TensorFlow ${{ matrix.tensorflow }} ${{ matrix.acceleration }} Python ${{ matrix.python }}"
          client-payload: '{"python": "${{ matrix.python }}", "tensorflow": "${{ matrix.tensorflow }}", "acceleration": "${{ matrix.acceleration }}", "run_id": "${{ github.run_id }}.${{ github.run_attempt }}" }'
